name: CI-Enhanced

env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "6f29f12e82a8293156836ad81cc9bf5af41fe836"

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "README.md"
  push:
    branches:
      - main
      - master
    paths-ignore:
      - ".github/**"
      - "docs/**"
      - "README.md"

jobs:
  # Windows builds with better error handling
  windows-build:
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-pc-windows-msvc, i686-pc-windows-msvc]
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-2022
          - target: i686-pc-windows-msvc
            os: windows-2022

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: "1.75"
        targets: ${{ matrix.target }}

    - name: Setup vcpkg (fallback without cache)
      run: |
        git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
        cd C:\vcpkg
        git checkout ${{ env.VCPKG_COMMIT_ID }}
        .\bootstrap-vcpkg.bat
        echo "VCPKG_ROOT=C:\vcpkg" >> $GITHUB_ENV
      shell: cmd

    - name: Install vcpkg dependencies
      run: |
        C:\vcpkg\vcpkg.exe install --triplet=${{ matrix.target == 'x86_64-pc-windows-msvc' && 'x64-windows' || 'x86-windows' }} libvpx libyuv opus aom
      shell: cmd

    - name: Build Rust project
      run: |
        cargo build --release --target=${{ matrix.target }} --features flutter
      env:
        VCPKG_ROOT: C:\vcpkg

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/rustdesk.exe

  # macOS builds with API compatibility fixes
  macos-build:
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
        include:
          - target: x86_64-apple-darwin
            os: macos-13
          - target: aarch64-apple-darwin
            os: macos-14

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        brew install cmake ninja wget

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: "1.75"
        targets: ${{ matrix.target }}

    - name: Setup vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git /tmp/vcpkg
        cd /tmp/vcpkg
        git checkout ${{ env.VCPKG_COMMIT_ID }}
        ./bootstrap-vcpkg.sh
        echo "VCPKG_ROOT=/tmp/vcpkg" >> $GITHUB_ENV

    - name: Install vcpkg dependencies
      run: |
        /tmp/vcpkg/vcpkg install --triplet=${{ matrix.target == 'x86_64-apple-darwin' && 'x64-osx' || 'arm64-osx' }} libvpx libyuv opus aom

    - name: Build Rust project
      run: |
        export MACOSX_DEPLOYMENT_TARGET=10.14
        cargo build --release --target=${{ matrix.target }} --features flutter
      env:
        VCPKG_ROOT: /tmp/vcpkg

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/rustdesk

  # Linux builds
  linux-build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang cmake curl gcc git g++ \
          libpam0g-dev libasound2-dev libunwind-dev \
          libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
          libgtk-3-dev libpulse-dev libva-dev libvdpau-dev \
          libxcb-randr0-dev libxcb-shape0-dev libxcb-xfixes0-dev \
          libxdo-dev libxfixes-dev nasm wget

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: "1.75"
        targets: x86_64-unknown-linux-gnu

    - name: Setup vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git /opt/vcpkg
        cd /opt/vcpkg
        git checkout ${{ env.VCPKG_COMMIT_ID }}
        ./bootstrap-vcpkg.sh
        echo "VCPKG_ROOT=/opt/vcpkg" >> $GITHUB_ENV

    - name: Install vcpkg dependencies
      run: |
        /opt/vcpkg/vcpkg install --triplet=x64-linux libvpx libyuv opus aom

    - name: Build Rust project
      run: |
        cargo build --release --target=x86_64-unknown-linux-gnu --features flutter
      env:
        VCPKG_ROOT: /opt/vcpkg

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-x86_64-unknown-linux-gnu
        path: target/x86_64-unknown-linux-gnu/release/rustdesk

  # Android builds (simplified)
  android-build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64-linux-android, armv7-linux-androideabi, x86_64-linux-android]

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Android environment
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 34.0.0
        ndk-version: 25.2.9519653

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: "1.75"
        targets: ${{ matrix.target }}

    - name: Setup cargo-ndk
      run: cargo install cargo-ndk

    - name: Build Flutter APK
      run: |
        cd flutter
        flutter pub get
        flutter build apk --target-platform android-${{ matrix.target == 'aarch64-linux-android' && 'arm64' || matrix.target == 'armv7-linux-androideabi' && 'arm' || 'x64' }}

    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-android-${{ matrix.target }}
        path: flutter/build/app/outputs/flutter-apk/app-release.apk