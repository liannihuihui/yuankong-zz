# Multi-stage build for better reliability
FROM --platform=linux/amd64 ubuntu:22.04 AS base

# Set environment variables to avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    unzip \
    xz-utils \
    zip \
    libglu1-mesa \
    build-essential \
    cmake \
    ninja-build \
    clang \
    pkg-config \
    libgtk-3-dev \
    libasound2-dev \
    libpulse-dev \
    libxcb-randr0-dev \
    libxcb-shape0-dev \
    libxcb-xfixes0-dev \
    libxdo-dev \
    libxfixes-dev \
    libva-dev \
    libvdpau-dev \
    libpam0g-dev \
    libunwind-dev \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    nasm \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install Rust
FROM base AS rust-builder
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Install vcpkg
FROM rust-builder AS vcpkg-builder
RUN git clone https://github.com/Microsoft/vcpkg.git /opt/vcpkg && \
    cd /opt/vcpkg && \
    git checkout 6f29f12e82a8293156836ad81cc9bf5af41fe836 && \
    ./bootstrap-vcpkg.sh

ENV VCPKG_ROOT=/opt/vcpkg

# Install vcpkg dependencies
RUN /opt/vcpkg/vcpkg install --triplet=x64-linux libvpx libyuv opus aom

# Install Flutter
FROM vcpkg-builder AS flutter-builder
RUN git clone https://github.com/flutter/flutter.git -b stable /opt/flutter
ENV PATH="/opt/flutter/bin:${PATH}"
RUN flutter doctor --android-licenses || true
RUN flutter config --enable-linux-desktop

# Final stage
FROM flutter-builder AS final

WORKDIR /workspace

# Copy project files
COPY . .

# Build commands will be run by CI
CMD ["bash"]